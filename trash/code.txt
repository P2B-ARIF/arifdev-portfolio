import React from "react";
import { FileDown, Sparkles } from "lucide-react";

const AboutSection = () => {
	return (
		<div className='py-32 container mx-auto'>
			<div className='w-fit self-center-safe flex items-center px-4 py-2 rounded-full bg-gray-800/50 border border-gray-700 text-gray-300'>
				<Sparkles className='w-4 h-4 mr-2' />
				<span className='text-sm font-medium tracking-wide'>About Me</span>
			</div>

			<h5 className='text-lg mt-10 text-gray-400'>
				I'm a <span className='text-highlight'>junior web developer</span> and I
				have a lot of knowledge, every day I'm pushing my learning skills.
				Adaptable quickly, and organized well. Interested in learning the latest
				web & software technologies quickly.
			</h5>
			<h5 className='text-lg mt-2 text-gray-400'>
				I'm a junior web developer and I have a lot of knowledge, every day I'm
				pushing <span className='text-highlight'>my learning skills</span>.
				Adaptable quickly, and organized well. Interested in learning the latest
				web & software technologies quickly. Able to work well in teams as well
				as individually.{" "}
				<span className='text-highlight'>
					My future goal is to become a senior full-stack developer!
				</span>
			</h5>

			<h4 className='my-5 mt-10'>
				Next Js | Prisma | Typescript | MongoDB | MySql | Framer-Motion
			</h4>

			<div className='flex items-center gap-4'>
				<div className='bg-gray-800/50 border-gray-700 flex items-center gap-2 px-4 py-2 rounded-lg text-sm font-medium transition-colors hover:bg-gray-800 text-center border justify-center'>
					<FileDown />
					Download Resume
				</div>
				<div className='bg-gray-800/50 border-gray-700 flex items-center gap-2 px-4 py-2 rounded-lg text-sm font-medium transition-colors hover:bg-gray-800 text-center border justify-center'>
					<FileDown />
					Get in touch
				</div>
			</div>
		</div>
	);
};

export default AboutSection;




"use client";
import React, { useEffect, useState } from "react";
import GitHubCalendar from "react-github-calendar";
import { request, gql } from "graphql-request";

// --- 1. Define Types for GraphQL Response ---
interface ContributionCalendar {
	totalContributions: number;
}

interface ContributionsCollection {
	contributionCalendar: ContributionCalendar;
}

interface User {
	contributionsCollection: ContributionsCollection;
}

interface GitHubData {
	user: User;
}

const GitHubCalendarCard = () => {
	const username = "P2B-ARIF";
	const token =
		"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";
	const [contributions, setContributions] = useState(null);

	// console.log(process.env.GITHUB_TOKEN, "tokne");

	const fetchGitHubData = async () => {
		const endpoint = "https://api.github.com/graphql";

		const query = gql`
			query {
				user(login: "${username}") {
					contributionsCollection {
						contributionCalendar {
							totalContributions
						}
					}
				}
			}
		`;

		const headers = {
			Authorization: `Bearer ${token}`,
		};

		try {
			const data = await request(endpoint, query, {}, headers);
			const count: any =
				data?.user?.contributionsCollection?.contributionCalendar
					?.totalContributions || 0;
			setContributions(count);
		} catch (err) {
			console.error("GitHub fetch error:", err);
		}
	};

	useEffect(() => {
		fetchGitHubData();
	}, []);

	console.log(contributions, "contributions");

	return (
		<div className='p-2 text-accent w-full flex flex-col '>
			<div className='flex justify-between items-center mb-4 h-full'>
				<h2 className=' text-lg font-semibold flex items-center gap-2'>
					<svg height='20' width='20' viewBox='0 0 16 16' fill='currentColor'>
						<path d='M8 0C3.58 0 0 3.58 0 8c0 3.54...' />
					</svg>
					GitHub activity
				</h2>
				<span className='text-sm text-gray-400'>
					{contributions} contributions in the last year
				</span>
			</div>
			<div className='overflow-x-auto'>
				<GitHubCalendar
					username={username}
					blockSize={11}
					blockMargin={2}
					colorScheme='dark'
					fontSize={14}
				/>
			</div>
			<div className='text-base items-end justify-self-end text-gray-400 mt-10'>
				Last pushed on{" "}
				{new Date().toLocaleDateString(undefined, {
					weekday: "long",
					year: "numeric",
					month: "long",
					day: "numeric",
				})}
			</div>
		</div>
	);
};

export default GitHubCalendarCard;
